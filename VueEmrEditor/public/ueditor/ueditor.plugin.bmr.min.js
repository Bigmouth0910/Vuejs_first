"use strict";
function isParentTarget(e, t) {
  var i = (e.getAttribute("class") || "").indexOf("oak-field") > -1,
    n = e.getAttribute(t);
  if (!i) return !1;
  if (n) return e;
  for (
    ;
    e.parentNode && (e.getAttribute("class") || "").indexOf("oak-field") > -1;

  )
    if (((e = e.parentNode), e.getAttribute(t))) return e;
}
function getBodyTarget(e) {
  if ("BODY" == e.tagName) return e;
  for (; (e = e.parentNode); ) if ("BODY" == e.tagName) return e;
}
function command(e) {
  var t = new OAKEditor({ editor: e, command: editCmds }),
    i = new OAKEditor({ editor: e, command: fixedCmds }),
    n = new OAKEditor({ editor: e, command: insertCmds }),
    o = new OAKEditor({ editor: e, command: emreCmds }),
    a = new OAKEditor({ editor: e, command: layoutCmds });
  return {
    editHtml: t.renderCommand(),
    fixedHtml: i.renderCommand(),
    insertHtml: n.renderCommand(),
    emreHtml: o.renderCommand(),
    layoutHtml: a.renderCommand(),
  };
}
var utils = baidu.editor.utils,
  commands = [],
  editCmds = [
    "bold",
    "italic",
    "underline",
    "fontborder",
    "strikethrough",
    "subscript",
    "superscript",
    "|",
    "paragraph",
    "fontfamily",
    "fontsize",
    "|",
    "indent",
    "outdent",
    "|",
    "rowspacingtop",
    "rowspacingbottom",
    "lineheight",
    "|",
    "forecolor",
    "backcolor",
    "insertorderedlist",
    "insertunorderedlist",
    "indent",
    "|",
    "justifyleft",
    "justifycenter",
    "justifyright",
    "justifyjustify",
  ],
  fixedCmds = [
    "undo",
    "redo",
    "formatmatch",
    "removeformat",
    "|",
    "print",
    "printing",
    "noprinting",
    "preview",
    "searchreplace",
    "|",
    "allwidgets",
    "allhtml",
    "|",
    "pdf",
    "txt",
  ],
  insertCmds = [
    "simpleupload",
    "insertimage",
    "scrawl",
    "inserttable",
    "insertpage",
    "|",
    "pagebreak",
    "spechars",
    "|",
    "kityformula",
    "|",
    "horizontal",
    "snapscreen",
    "|",
    "inserttable",
    "deletetable",
    "insertparagraphbeforetable",
    "insertrow",
    "deleterow",
    "insertcol",
    "deletecol",
    "|",
    "mergecells",
    "mergeright",
    "mergedown",
    "splittocells",
    "splittorows",
    "splittocols",
    "|",
    "formulas",
  ],
  tableCmds = [
    "deletetable",
    "insertparagraphbeforetable",
    "insertrow",
    "deleterow",
    "insertcol",
    "deletecol",
    "|",
    "mergecells",
    "mergeright",
    "mergedown",
    "splittocells",
    "splittorows",
    "splittocols",
  ],
  emreCmds = [
    "template",
    "controllibrary",
    "checkbox",
    "radio",
    "select",
    "input",
    "timeinput",
    "dicom",
    "tagimg",
    "|",
    "insertcmt",
    "hidecmt",
    "showcmt",
  ],
  layoutCmds = [],
  OAKEditor = function (e) {
    (this.editor = e.editor),
      (this.editorui = baidu.editor.ui),
      (this.command = e.command || command);
  };
(OAKEditor.prototype = {
  registerCommand: function (e, t) {
    this.editor.command[e] = t;
  },
  renderCommand: function (e) {
    var t = "";
    e = e || this.command;
    for (var i = 0; i < e.length; i++) {
      var n = this.editorui[e[i]];
      if (n) {
        t += n(this.editor).renderHtml();
      } else t += "<div class='edui-box edui-separator edui-default'></div>";
    }
    return t;
  },
}),
  (UE.plugins.controllibrary = function () {
    var e = this;
    e.commands.controllibrary = {
      execCommand: function () {
        var e = new UE.ui.Dialog({
          iframeUrl:
            this.options.UEDITOR_HOME_URL +
            "dialogs/oak-form/controllibrary.html",
          name: "controllibrary",
          editor: this,
          title: "控件库",
          cssRules: "width:700px;height:350px;",
          buttons: [
            {
              className: "edui-okbutton",
              label: "确定",
              onclick: function () {
                e.close(!0);
              },
            },
            {
              className: "edui-cancelbutton",
              label: "取消",
              onclick: function () {
                e.close(!1);
              },
            },
          ],
        });
        e.render(), e.open();
      },
    };
  }),
  (baidu.editor.ui.controllibrary = function (e, t, i) {
    var n = new UE.ui.Dialog({
      iframeUrl:
        e.options.UEDITOR_HOME_URL + "dialogs/oak-form/controllibrary.html",
      editor: e,
      name: "controllibrary",
      title: "控件库",
      cssRules: "width:700px; height:350px;",
      buttons: [
        {
          className: "edui-okbutton",
          label: "确定",
          onclick: function () {
            n.close(!0);
          },
        },
        {
          className: "edui-cancelbutton",
          label: "取消",
          onclick: function () {
            n.close(!1);
          },
        },
      ],
    });
    e.ready(function () {
      UE.utils.cssRule(
        "kfformula",
        "img.kfformula{vertical-align: middle;}",
        e.document
      );
    });
    var o = e.options.UEDITOR_HOME_URL + "imgs/controllibrary.png",
      a = document.createElement("a");
    (a.href = o), (a.href = a.href), (o = a.href);
    var l = new UE.ui.Button({
      name: "controllibrary-1",
      title: "控件库",
      className: "edui-for-controllibrary-1",
      cssRules: 'background-image: url("' + o + '") !important',
      onclick: function () {
        n.render(), n.open();
      },
    });
    return (
      e.addListener("selectionchange", function () {
        var t = e.queryCommandState("checkbox");
        -1 == t
          ? (l.setDisabled(!0), l.setChecked(!1))
          : (l.setDisabled(!1), l.setChecked(t));
      }),
      l
    );
  }),
  (UE.plugins.checkbox = function () {
    var e = this;
    e.commands.checkbox = {
      execCommand: function () {
        var e = new UE.ui.Dialog({
          iframeUrl:
            this.options.UEDITOR_HOME_URL + "dialogs/oak-form/checkbox.html",
          name: "checkbox",
          editor: this,
          title: "复选框",
          cssRules: "width:600px;height:300px;",
          buttons: [
            {
              className: "edui-okbutton",
              label: "确定",
              onclick: function () {
                e.close(!0);
              },
            },
            {
              className: "edui-cancelbutton",
              label: "取消",
              onclick: function () {
                e.close(!1);
              },
            },
          ],
        });
        e.render(), e.open();
      },
    };
    var t = new baidu.editor.ui.Popup({
      editor: this,
      content: "",
      className: "edui-bubble",
      _edittext: function () {
        (baidu.editor.plugins.checkbox.editdom = t.anchorEl),
          e.execCommand("checkbox"),
          this.hide();
      },
      _delete: function () {
        window.confirm("确认删除该控件吗？") &&
          baidu.editor.dom.domUtils.remove(this.anchorEl, !1),
          this.hide();
      },
    });
    t.render(),
      e.addListener("mouseover", function (i, n) {
        var o = e.body.getAttribute("pattern");
        if (!o || "design" == o) {
          n = n || window.event;
          var a = n.target || n.srcElement,
            l = isParentTarget(a, "oakplugin");
          if (!l) return void t.hide();
          if ("checkbox" == l.getAttribute("oakplugin")) {
            var r = t.formatHtml(
              "<nobr>" +
                l.getAttribute("title") +
                '   复选框: <span onclick=$$._edittext() class="edui-clickable">编辑</span>  <span onclick=$$._delete() class="edui-clickable">删除</span></nobr>'
            );
            r
              ? ((t.getDom("content").innerHTML = r),
                (t.anchorEl = l),
                t.showAnchor(t.anchorEl))
              : t.hide();
          } else t.hide();
        }
      }),
      e.addListener("click", function (t, i) {
        var n = e.body.getAttribute("pattern");
        if (
          ((i = i || window.event),
          isParentTarget(i.target || i.srcElement, "oakplugin") &&
            "readonly" == n)
        )
          return i.preventDefault(), !1;
      });
  }),
  (baidu.editor.ui.checkbox = function (e, t, i) {
    var n = new UE.ui.Dialog({
      iframeUrl: e.options.UEDITOR_HOME_URL + "dialogs/oak-form/checkbox.html",
      editor: e,
      name: "checkbox",
      title: "插入复选框",
      cssRules: "width:600px; height:300px;",
      buttons: [
        {
          className: "edui-okbutton",
          label: "确定",
          onclick: function () {
            n.close(!0);
          },
        },
        {
          className: "edui-cancelbutton",
          label: "取消",
          onclick: function () {
            n.close(!1);
          },
        },
      ],
    });
    e.ready(function () {
      UE.utils.cssRule(
        "kfformula",
        "img.kfformula{vertical-align: middle;}",
        e.document
      );
    });
    var o = e.options.UEDITOR_HOME_URL + "imgs/checkbox.png",
      a = document.createElement("a");
    (a.href = o), (a.href = a.href), (o = a.href);
    var l = new UE.ui.Button({
      name: "checkbox-1",
      title: "插入复选框",
      className: "edui-for-checkbox-1",
      cssRules: 'background-image: url("' + o + '") !important',
      onclick: function () {
        n.render(), n.open();
      },
    });
    return (
      e.addListener("selectionchange", function () {
        var t = e.queryCommandState("checkbox");
        -1 == t
          ? (l.setDisabled(!0), l.setChecked(!1))
          : (l.setDisabled(!1), l.setChecked(t));
      }),
      l
    );
  }),
  (UE.plugins.radio = function () {
    var e = this;
    e.commands.radio = {
      execCommand: function () {
        var e = new UE.ui.Dialog({
          iframeUrl:
            this.options.UEDITOR_HOME_URL + "dialogs/oak-form/radio.html",
          name: "radio",
          editor: this,
          title: "单选框",
          cssRules: "width:600px;height:300px;",
          buttons: [
            {
              className: "edui-okbutton",
              label: "确定",
              onclick: function () {
                e.close(!0);
              },
            },
            {
              className: "edui-cancelbutton",
              label: "取消",
              onclick: function () {
                e.close(!1);
              },
            },
          ],
        });
        e.render(), e.open();
      },
    };
    var t = new baidu.editor.ui.Popup({
      editor: this,
      content: "",
      className: "edui-bubble",
      _edittext: function () {
        (baidu.editor.plugins.radio.editdom = t.anchorEl),
          e.execCommand("radio"),
          this.hide();
      },
      _delete: function () {
        window.confirm("确认删除该控件吗？") &&
          baidu.editor.dom.domUtils.remove(this.anchorEl, !1),
          this.hide();
      },
    });
    t.render(),
      e.addListener("mouseover", function (i, n) {
        var o = e.body.getAttribute("pattern");
        if (!o || "design" == o) {
          n = n || window.event;
          var a = n.target || n.srcElement,
            l = isParentTarget(a, "oakplugin");
          if (!l) return void t.hide();
          if ("radio" == l.getAttribute("oakplugin")) {
            var r = t.formatHtml(
              "<nobr>" +
                l.getAttribute("title") +
                '  单选框: <span onclick=$$._edittext() class="edui-clickable">编辑</span>  <span onclick=$$._delete() class="edui-clickable">删除</span></nobr>'
            );
            r
              ? ((t.getDom("content").innerHTML = r),
                (t.anchorEl = l),
                t.showAnchor(t.anchorEl))
              : t.hide();
          }
        }
      });
  }),
  (baidu.editor.ui.radio = function (e, t, i) {
    var n = new UE.ui.Dialog({
      iframeUrl: e.options.UEDITOR_HOME_URL + "dialogs/oak-form/radio.html",
      editor: e,
      name: "radio",
      title: "插入单选框",
      cssRules: "width:600px; height:300px;",
      buttons: [
        {
          className: "edui-okbutton",
          label: "确定",
          onclick: function () {
            n.close(!0);
          },
        },
        {
          className: "edui-cancelbutton",
          label: "取消",
          onclick: function () {
            n.close(!1);
          },
        },
      ],
    });
    e.ready(function () {
      UE.utils.cssRule(
        "kfformula",
        "img.kfformula{vertical-align: middle;}",
        e.document
      );
    });
    var o = e.options.UEDITOR_HOME_URL + "imgs/radio.png",
      a = document.createElement("a");
    (a.href = o), (a.href = a.href), (o = a.href);
    var l = new UE.ui.Button({
      name: "radio-1",
      title: "插入单选框",
      className: "edui-for-radio-1",
      cssRules: 'background-image: url("' + o + '") !important',
      onclick: function () {
        n.render(), n.open();
      },
    });
    return (
      e.addListener("selectionchange", function () {
        var t = e.queryCommandState("radio");
        -1 == t
          ? (l.setDisabled(!0), l.setChecked(!1))
          : (l.setDisabled(!1), l.setChecked(t));
      }),
      l
    );
  }),
  (UE.plugins.input = function () {
    var e = this;
    e.commands.input = {
      execCommand: function () {
        var e = new UE.ui.Dialog({
          iframeUrl:
            this.options.UEDITOR_HOME_URL + "dialogs/oak-form/input.html",
          name: "input",
          editor: this,
          title: "插入文本域输入",
          cssRules: "width:500px;height:190px;",
          buttons: [
            {
              className: "edui-okbutton",
              label: "确定",
              onclick: function () {
                e.close(!0);
              },
            },
            {
              className: "edui-cancelbutton",
              label: "取消",
              onclick: function () {
                e.close(!1);
              },
            },
          ],
        });
        e.render(), e.open();
      },
    };
    var t = new baidu.editor.ui.Popup({
      editor: this,
      content: "",
      className: "edui-bubble",
      _edittext: function () {
        (baidu.editor.plugins.input.editdom = t.anchorEl),
          e.execCommand("input"),
          this.hide();
      },
      _delete: function () {
        window.confirm("确认删除该控件吗？") &&
          baidu.editor.dom.domUtils.remove(this.anchorEl, !1),
          this.hide();
      },
    });
    t.render(),
      e.addListener("mouseover", function (i, n) {
        var o = e.body.getAttribute("pattern");
        if (!o || "design" == o) {
          n = n || window.event;
          var a = n.target || n.srcElement,
            l = isParentTarget(a, "oakplugin");
          if (!l) return void t.hide();
          if ("input" == l.getAttribute("oakplugin")) {
            var r = t.formatHtml(
              "<nobr>" +
                l.getAttribute("title") +
                '   单行文本输入: <span onclick=$$._edittext() class="edui-clickable">编辑</span>  <span onclick=$$._delete() class="edui-clickable">删除</span></nobr>'
            );
            r
              ? ((t.getDom("content").innerHTML = r),
                (t.anchorEl = l),
                t.showAnchor(t.anchorEl))
              : t.hide();
          } else t.hide();
        }
      });
  }),
  (baidu.editor.ui.input = function (e, t, i) {
    var n = new UE.ui.Dialog({
      iframeUrl: e.options.UEDITOR_HOME_URL + "dialogs/oak-form/input.html",
      editor: e,
      name: "input",
      title: "插入文本域输入",
      cssRules: "width:500px; height:190px;",
      buttons: [
        {
          className: "edui-okbutton",
          label: "确定",
          onclick: function () {
            n.close(!0);
          },
        },
        {
          className: "edui-cancelbutton",
          label: "取消",
          onclick: function () {
            n.close(!1);
          },
        },
      ],
    });
    e.ready(function () {
      UE.utils.cssRule(
        "kfformula",
        "img.kfformula{vertical-align: middle;}",
        e.document
      );
    });
    var o = e.options.UEDITOR_HOME_URL + "imgs/input.png",
      a = document.createElement("a");
    (a.href = o), (a.href = a.href), (o = a.href);
    var l = new UE.ui.Button({
      name: "input-1",
      title: "文本域输入",
      className: "edui-for-input-1",
      cssRules: 'background-image: url("' + o + '") !important',
      onclick: function () {
        n.render(), n.open();
      },
    });
    return (
      e.addListener("selectionchange", function () {
        var t = e.queryCommandState("input");
        -1 == t
          ? (l.setDisabled(!0), l.setChecked(!1))
          : (l.setDisabled(!1), l.setChecked(t));
      }),
      l
    );
  }),
  (UE.plugins.textarea = function () {
    var e = this;
    e.commands.textarea = {
      execCommand: function () {
        var e = new UE.ui.Dialog({
          iframeUrl:
            this.options.UEDITOR_HOME_URL + "dialogs/oak-form/textarea.html",
          name: "textarea",
          editor: this,
          title: "插入多行文本输入",
          cssRules: "width:600px;height:200px;",
          buttons: [
            {
              className: "edui-okbutton",
              label: "确定",
              onclick: function () {
                e.close(!0);
              },
            },
            {
              className: "edui-cancelbutton",
              label: "取消",
              onclick: function () {
                e.close(!1);
              },
            },
          ],
        });
        e.render(), e.open();
      },
    };
    var t = new baidu.editor.ui.Popup({
      editor: this,
      content: "",
      className: "edui-bubble",
      _edittext: function () {
        (baidu.editor.plugins.textarea.editdom = t.anchorEl),
          e.execCommand("textarea"),
          this.hide();
      },
      _delete: function () {
        window.confirm("确认删除该控件吗？") &&
          baidu.editor.dom.domUtils.remove(this.anchorEl, !1),
          this.hide();
      },
    });
    t.render(),
      e.addListener("mouseover", function (i, n) {
        if ("design" == e.body.getAttribute("pattern")) {
          n = n || window.event;
          var o = n.target || n.srcElement,
            a = isParentTarget(o, "oakplugin");
          if (!a) return void t.hide();
          if ("textarea" == a.getAttribute("oakplugin")) {
            var l = t.formatHtml(
              "<nobr>" +
                a.getAttribute("title") +
                '  多行文本输入: <span onclick=$$._edittext() class="edui-clickable">编辑</span>  <span onclick=$$._delete() class="edui-clickable">删除</span></nobr>'
            );
            l
              ? ((t.getDom("content").innerHTML = l),
                (t.anchorEl = a),
                t.showAnchor(t.anchorEl))
              : t.hide();
          }
        }
      });
  }),
  (baidu.editor.ui.textarea = function (e, t, i) {
    var n = new UE.ui.Dialog({
      iframeUrl: e.options.UEDITOR_HOME_URL + "dialogs/oak-form/textarea.html",
      editor: e,
      name: "textarea",
      title: "多行文本输入",
      cssRules: "width:500px; height:200px;",
      buttons: [
        {
          className: "edui-okbutton",
          label: "确定",
          onclick: function () {
            n.close(!0);
          },
        },
        {
          className: "edui-cancelbutton",
          label: "取消",
          onclick: function () {
            n.close(!1);
          },
        },
      ],
    });
    e.ready(function () {
      UE.utils.cssRule(
        "kfformula",
        "img.kfformula{vertical-align: middle;}",
        e.document
      );
    });
    var o = e.options.UEDITOR_HOME_URL + "imgs/textarea.png",
      a = document.createElement("a");
    (a.href = o), (a.href = a.href), (o = a.href);
    var l = new UE.ui.Button({
      name: "textarea-1",
      title: "插入多行文本输入",
      className: "edui-for-textarea-1",
      cssRules: 'background-image: url("' + o + '") !important',
      onclick: function () {
        n.render(), n.open();
      },
    });
    return (
      e.addListener("selectionchange", function () {
        var t = e.queryCommandState("textarea");
        -1 == t
          ? (l.setDisabled(!0), l.setChecked(!1))
          : (l.setDisabled(!1), l.setChecked(t));
      }),
      l
    );
  }),
  (UE.plugins.select = function () {
    var me = this,
      thePlugins = "select";
    me.commands[thePlugins] = {
      execCommand: function () {
        var e = new UE.ui.Dialog({
          iframeUrl:
            this.options.UEDITOR_HOME_URL + "dialogs/oak-form/select.html",
          name: thePlugins,
          editor: this,
          title: "插入下拉框",
          cssRules: "width:600px;height:300px;",
          buttons: [
            {
              className: "edui-okbutton",
              label: "确定",
              onclick: function () {
                e.close(!0);
              },
            },
            {
              className: "edui-cancelbutton",
              label: "取消",
              onclick: function () {
                e.close(!1);
              },
            },
          ],
        });
        e.render(), e.open();
      },
    };
    var popup = new baidu.editor.ui.Popup({
      editor: this,
      content: "",
      className: "edui-bubble",
      _edittext: function () {
        (baidu.editor.plugins[thePlugins].editdom = popup.anchorEl),
          me.execCommand(thePlugins),
          this.hide();
      },
      _delete: function () {
        window.confirm("确认删除该控件吗？") &&
          baidu.editor.dom.domUtils.remove(this.anchorEl, !1),
          this.hide();
      },
    });
    popup.render(),
      me.addListener("mouseover", function (e, t) {
        var i = me.body.getAttribute("pattern");
        if (!i || "design" == i) {
          t = t || window.event;
          var n = t.target || t.srcElement,
            o = isParentTarget(n, "oakplugin"),
            a = isParentTarget(n, "data-type");
          if (!o || a) return void popup.hide();
          if (o.getAttribute("oakplugin") == thePlugins && !a) {
            var l = popup.formatHtml(
              "<nobr>" +
                o.getAttribute("title") +
                '   下拉框: <span onclick=$$._edittext() class="edui-clickable">编辑</span>  <span onclick=$$._delete() class="edui-clickable">删除</span></nobr>'
            );
            l
              ? ((popup.getDom("content").innerHTML = l),
                (popup.anchorEl = o),
                popup.showAnchor(popup.anchorEl))
              : popup.hide();
          }
        }
      }),
      me.addListener("click", function (t, evt) {
        var pattern = me.body.getAttribute("pattern");
        if (!pattern || "readonly" != pattern) {
          evt = evt || window.event;
          var el = evt.target || evt.srcElement,
            target = isParentTarget(el, "oakplugin"),
            parentSelect = isParentTarget(el, "data-type"),
            body = getBodyTarget(el);
          try {
            for (
              var oakSelect = body.getElementsByClassName("oak-select-root"),
                i = 0;
              i < oakSelect.length;
              i++
            )
              oakSelect[i].style.display = "none";
          } catch (e) {}
          if (target) {
            var model = eval("(" + target.getAttribute("obj") + ")") || {},
              selectValue = model.defaultValue,
              bindData = model.bindData || [];
            if ("select" == model.type && 0 != bindData.length) {
              if (
                0 == target.getElementsByClassName("oak-select-root").length
              ) {
                var selectEl = document.createElement("span");
                selectEl.className = "oak-field oak-select-root";
                for (
                  var html =
                      '<span class="oak-select-content oak-field"><span class="oak-select oak-field" data-type="select">',
                    i = 0;
                  i < bindData.length;
                  i++
                )
                  html +=
                    '<span class="' +
                    (bindData[i].SELECTED
                      ? "selected oak-field li"
                      : "oak-field li") +
                    '" value="' +
                    bindData[i].VALUE +
                    '" title="' +
                    bindData[i].TEXT +
                    '">' +
                    bindData[i].TEXT +
                    "</span>";
                (html += "</span></span>"),
                  (selectEl.innerHTML = html),
                  target.appendChild(selectEl);
              } else
                target.getElementsByClassName(
                  "oak-select-root"
                )[0].style.display = "";
              if (parentSelect) {
                for (
                  var allLis = parentSelect.getElementsByClassName("li"), i = 0;
                  i < allLis.length;
                  i++
                )
                  allLis[i].className = "oak-field li";
                (selectValue = el.getAttribute("title")),
                  (el.className = "oak-field selected li"),
                  (target.getElementsByClassName(
                    "oak-field-value"
                  )[0].innerHTML = selectValue),
                  (target.getElementsByClassName(
                    "oak-select-root"
                  )[0].style.display = "none");
              }
            }
          }
        }
      });
  }),
  (baidu.editor.ui.select = function (e, t, i) {
    var n = new UE.ui.Dialog({
      iframeUrl: e.options.UEDITOR_HOME_URL + "dialogs/oak-form/select.html",
      editor: e,
      name: "select",
      title: "插入下拉框",
      cssRules: "width:600px; height:300px;",
      buttons: [
        {
          className: "edui-okbutton",
          label: "确定",
          onclick: function () {
            n.close(!0);
          },
        },
        {
          className: "edui-cancelbutton",
          label: "取消",
          onclick: function () {
            n.close(!1);
          },
        },
      ],
    });
    e.ready(function () {
      UE.utils.cssRule(
        "kfformula",
        "img.kfformula{vertical-align: middle;}",
        e.document
      );
    });
    var o = e.options.UEDITOR_HOME_URL + "imgs/select.png",
      a = document.createElement("a");
    (a.href = o), (a.href = a.href), (o = a.href);
    var l = new UE.ui.Button({
      name: "select-1",
      title: "下拉框",
      className: "edui-for-select-1",
      cssRules: 'background-image: url("' + o + '") !important',
      onclick: function () {
        n.render(), n.open();
      },
    });
    return (
      e.addListener("selectionchange", function () {
        var t = e.queryCommandState("select");
        -1 == t
          ? (l.setDisabled(!0), l.setChecked(!1))
          : (l.setDisabled(!1), l.setChecked(t));
      }),
      l
    );
  }),
  (UE.plugins.timeinput = function () {
    var me = this,
      thePlugins = "timeinput";
    me.commands[thePlugins] = {
      execCommand: function () {
        var e = new UE.ui.Dialog({
          iframeUrl:
            this.options.UEDITOR_HOME_URL + "dialogs/oak-form/timeinput.html",
          name: thePlugins,
          editor: this,
          title: "插入日期输入框",
          cssRules: "width:540px;height:250px;",
          buttons: [
            {
              className: "edui-okbutton",
              label: "确定",
              onclick: function () {
                e.close(!0);
              },
            },
            {
              className: "edui-cancelbutton",
              label: "取消",
              onclick: function () {
                e.close(!1);
              },
            },
          ],
        });
        e.render(), e.open();
      },
    };
    var popup = new baidu.editor.ui.Popup({
      editor: this,
      content: "",
      className: "edui-bubble",
      _edittext: function () {
        (baidu.editor.plugins[thePlugins].editdom = popup.anchorEl),
          me.execCommand(thePlugins),
          this.hide();
      },
      _delete: function () {
        window.confirm("确认删除该控件吗？") &&
          baidu.editor.dom.domUtils.remove(this.anchorEl, !1),
          this.hide();
      },
    });
    popup.render(),
      me.addListener("mouseover", function (e, t) {
        var i = me.body.getAttribute("pattern");
        if (!i || "design" == i) {
          t = t || window.event;
          var n = t.target || t.srcElement,
            o = isParentTarget(n, "oakplugin");
          if (!o) return void popup.hide();
          if (o.getAttribute("oakplugin") == thePlugins) {
            var a = popup.formatHtml(
              "<nobr>" +
                o.getAttribute("title") +
                '   日期输入框: <span onclick=$$._edittext() class="edui-clickable">编辑</span>  <span onclick=$$._delete() class="edui-clickable">删除</span></nobr>'
            );
            a
              ? ((popup.getDom("content").innerHTML = a),
                (popup.anchorEl = o),
                popup.showAnchor(popup.anchorEl))
              : popup.hide();
          }
        }
      });
    var body = me.body;
    me.addListener("click", function (t, evt) {
      evt = evt || window.event;
      var el = evt.target || evt.srcElement,
        target = isParentTarget(el, "oakplugin"),
        bindClick = el.getAttribute("bindclick");
      if (target && bindClick)
        var obj = eval("(" + target.getAttribute("obj") + ")");
    });
  }),
  (baidu.editor.ui.timeinput = function (e, t, i) {
    var n = new UE.ui.Dialog({
      iframeUrl: e.options.UEDITOR_HOME_URL + "dialogs/oak-form/timeinput.html",
      editor: e,
      name: "timeinput",
      title: "插入时间输入控件",
      cssRules: "width:540px; height:250px;",
      buttons: [
        {
          className: "edui-okbutton",
          label: "确定",
          onclick: function () {
            n.close(!0);
          },
        },
        {
          className: "edui-cancelbutton",
          label: "取消",
          onclick: function () {
            n.close(!1);
          },
        },
      ],
    });
    e.ready(function () {
      UE.utils.cssRule(
        "kfformula",
        "img.kfformula{vertical-align: middle;}",
        e.document
      );
    });
    var o = e.options.UEDITOR_HOME_URL + "imgs/timeinput.png",
      a = document.createElement("a");
    (a.href = o), (a.href = a.href), (o = a.href);
    var l = new UE.ui.Button({
      name: "timeinput-1",
      title: "日期输入框",
      className: "edui-for-timeinput-1",
      cssRules: 'background-image: url("' + o + '") !important',
      onclick: function () {
        n.render(), n.open();
      },
    });
    return (
      e.addListener("selectionchange", function () {
        var t = e.queryCommandState("select");
        -1 == t
          ? (l.setDisabled(!0), l.setChecked(!1))
          : (l.setDisabled(!1), l.setChecked(t));
      }),
      l
    );
  }),
  (UE.plugins.allwidgets = function () {
    var me = this,
      thePlugins = "allwidgets";
    me.commands[thePlugins] = {
      execCommand: function execCommand() {
        for (
          var $body = this.body,
            $children = $body.getElementsByClassName("oakplugin"),
            widgets = [],
            i = 0;
          i < $children.length;
          i++
        ) {
          var obj = eval("(" + $children[i].getAttribute("obj") + ")"),
            oakplugin = $children[i].getAttribute("oakplugin"),
            value;
          if ("input" == oakplugin || "select" == oakplugin) {
            var target = $children[i].getElementsByClassName(
              "oak-field-value"
            )[0];
            value = target.innerText;
          } else if ("timeinput" == oakplugin) {
            var target = $children[i].getElementsByTagName("input")[1];
            value = target.value;
          } else if ("checkbox" == oakplugin || "radio" == oakplugin) {
            var inputs = $children[i].getElementsByTagName("input");
            value = [];
            for (var j = 0; j < inputs.length; j++)
              inputs[j].checked && value.push(inputs[j].value);
          }
          widgets.push({
            type: oakplugin,
            value: value,
            data: obj,
            target: $children[i],
          });
        }
        return widgets;
      },
    };
  }),
  (baidu.editor.ui.allwidgets = function (e, t, i) {
    var n = e.options.UEDITOR_HOME_URL + "imgs/allwidgets.png",
      o = document.createElement("a");
    (o.href = n), (o.href = o.href), (n = o.href);
    var a = new UE.ui.Button({
      name: "allwidgets-1",
      title: "获取所有控件",
      className: "edui-for-allwidgets-1",
      onclick: function () {
        e.execCommand("allwidgets");
      },
    });
    return (
      e.addListener("selectionchange", function () {
        var t = e.queryCommandState("select");
        -1 == t
          ? (a.setDisabled(!0), a.setChecked(!1))
          : (a.setDisabled(!1), a.setChecked(t));
      }),
      a
    );
  }),
  (UE.plugins.allhtml = function () {
    var e = this;
    e.commands.allhtml = {
      execCommand: function () {
        return alert(e.getContent()), e.getAllHtml()
        // return console.log(e.getContent()), e.getAllHtml();
      },
    };
  }),
  (baidu.editor.ui.allhtml = function (e, t, i) {
    var n = e.options.UEDITOR_HOME_URL + "imgs/allhtml.png",
      o = document.createElement("a");
    (o.href = n), (o.href = o.href), (n = o.href);
    var a = new UE.ui.Button({
      name: "allhtml-1",
      title: "获取编辑器html",
      className: "edui-for-allhtml-1",
      onclick: function () {
        e.execCommand("allhtml");
      },
    });
    return (
      e.addListener("selectionchange", function () {
        var t = e.queryCommandState("select");
        -1 == t
          ? (a.setDisabled(!0), a.setChecked(!1))
          : (a.setDisabled(!1), a.setChecked(t));
      }),
      a
    );
  }),
  (UE.plugins.insertcmt = function () {
    var e = this;
    e.commands.insertcmt = {
      execCommand: function () {
        var e = new UE.ui.Dialog({
          iframeUrl:
            this.options.UEDITOR_HOME_URL +
            "dialogs/comments/commentDialog.html",
          name: "insertcmt",
          editor: this,
          title: "批注",
          cssRules: "width:422px;height:150px;",
          buttons: [
            {
              className: "edui-okbutton",
              label: "确定",
              onclick: function () {
                e.close(!0);
              },
            },
            {
              className: "edui-cancelbutton",
              label: "取消",
              onclick: function () {
                e.close(!1);
              },
            },
          ],
        });
        e.render(), e.open();
      },
    };
    var t = new baidu.editor.ui.Popup({
      editor: this,
      content: "",
      className: "edui-bubble",
      _edittext: function () {
        (baidu.editor.plugins.insertcmt.editdom = t.anchorEl),
          e.execCommand("insertcmt"),
          this.hide();
      },
      _delete: function () {
        window.confirm("确认删除该控件吗？") &&
          baidu.editor.dom.domUtils.remove(this.anchorEl, !1),
          this.hide();
      },
    });
    t.render(),
      e.addListener("mouseover", function (i, n) {
        var o = e.body.getAttribute("pattern");
        if (!o || "design" == o) {
          n = n || window.event;
          var a = n.target || n.srcElement,
            l = isParentTarget(a, "oakplugin");
          if (!l) return void t.hide();
          if ("insertcmt" == l.getAttribute("oakplugin")) {
            var r = t.formatHtml(
              "<nobr>" +
                l.getAttribute("title") +
                '   单行文本输入: <span onclick=$$._edittext() class="edui-clickable">编辑</span>  <span onclick=$$._delete() class="edui-clickable">删除</span></nobr>'
            );
            r
              ? ((t.getDom("content").innerHTML = r),
                (t.anchorEl = l),
                t.showAnchor(t.anchorEl))
              : t.hide();
          } else t.hide();
        }
      });
  }),
  (baidu.editor.ui.insertcmt = function (e, t, i) {
    var n = new UE.ui.Dialog({
      iframeUrl:
        e.options.UEDITOR_HOME_URL + "dialogs/comments/commentDialog.html",
      editor: e,
      name: "insertcmt",
      title: "新建批注",
      cssRules: "width:422px;height:150px;",
      buttons: [
        {
          className: "edui-okbutton",
          label: "确定",
          onclick: function () {
            n.close(!0);
          },
        },
        {
          className: "edui-cancelbutton",
          label: "取消",
          onclick: function () {
            n.close(!1);
          },
        },
      ],
    });
    e.ui._dialogs.cmdDialog = n;
    var o = e.options.UEDITOR_HOME_URL + "imgs/newComment.png",
      a = document.createElement("a");
    (a.href = o), (a.href = a.href), (o = a.href);
    var l = new UE.ui.Button({
      name: "insertcmt-1",
      title: "新建批注",
      className: "edui-for-insertcmt-1",
      cssRules: 'background-image: url("' + o + '") !important',
      onclick: function () {
        if (e.selection.getRange().collapsed)
          return void alert("请选择需要添加批注的内容！");
        n.render(), n.open();
      },
    });
    return (
      e.addListener("selectionchange", function () {
        var t = e.queryCommandState("insertcmt");
        -1 == t
          ? (l.setDisabled(!0), l.setChecked(!1))
          : (l.setDisabled(!1), l.setChecked(t));
      }),
      l
    );
  }),
  (UE.plugins.hidecmt = function () {
    var e = this;
    e.commands.hidecmt = {
      execCommand: function () {
        console.log("隐藏批注。。。。");
        var t = e.document.getElementsByTagName("mark");
        UE.utils.each(t, function (e, t) {
          "postil" == e.getAttribute("plugins") &&
            (e.setAttribute("plugins", "hidepostil"),
            UE.dom.domUtils.removeStyle(e, "background-color"));
        });
      },
    };
  }),
  (baidu.editor.ui.hidecmt = function (e, t, i) {
    var n = e.options.UEDITOR_HOME_URL + "imgs/hidePostil.png",
      o = document.createElement("a");
    return (
      (o.href = n),
      (o.href = o.href),
      (n = o.href),
      new UE.ui.Button({
        name: "hidecmt-1",
        title: "隐藏批注",
        className: "edui-for-hidecmt-1",
        cssRules: 'background-image: url("' + n + '") !important',
        onclick: function () {
          e.execCommand("hidecmt");
        },
      })
    );
  }),
  (UE.plugins.showcmt = function () {
    var e = this;
    e.commands.showcmt = {
      execCommand: function () {
        console.log("展示批注。。。。");
        var t = e.document.getElementsByTagName("mark");
        UE.utils.each(t, function (e, t) {
          "hidepostil" == e.getAttribute("plugins") &&
            (e.setAttribute("plugins", "postil"),
            UE.dom.domUtils.setStyle(
              e,
              "background-color",
              "rgb(255, 255, 0)"
            ));
        });
      },
    };
  }),
  (baidu.editor.ui.showcmt = function (e, t, i) {
    var n = e.options.UEDITOR_HOME_URL + "imgs/showPostil.png",
      o = document.createElement("a");
    return (
      (o.href = n),
      (o.href = o.href),
      (n = o.href),
      new UE.ui.Button({
        name: "showcmt-1",
        title: "显示批注",
        className: "edui-for-showcmt-1",
        cssRules: 'background-image: url("' + n + '") !important',
        onclick: function () {
          e.execCommand("showcmt");
        },
      })
    );
  }),
  (UE.plugins.trace = function () {
    function optimize(e) {
      var t = e.startContainer,
        i = e.endContainer;
      (t = domUtils.findParentByTagName(t, tag, !0)) && e.setStartBefore(t),
        (i = domUtils.findParentByTagName(i, tag, !0)) && e.setEndAfter(i);
    }
    function getPreviousNode(e) {
      var t = e.startContainer,
        i = e.endContainer;
      console.log(t, "111");
      console.log(i, "222");
    }
    var me = this,
      domUtils = UE.dom.domUtils,
      tag = "mark";
    (me.commands.trace = {
      execCommand: function (e, t) {
        var i = me.selection.getRange(),
          n = i.collapsed
            ? me.queryCommandValue("trace")
            : me.selection.getStart();
        if (
          n &&
          n.tagName.toLowerCase() == tag.toLowerCase() &&
          "trace" == n.getAttribute("plugins")
        )
          n.setAttribute("author", t.author);
        else {
          i.cloneContents(),
            i.applyInlineStyle(tag, {
              style:
                "text-decoration: line-through;color: rgb(151, 71, 6);font-style: normal;",
              plugins: "trace",
              author: t.author,
            });
        }
        i.collapse().select(!0);
      },
      queryCommandValue: function () {
        var e,
          t = this.selection.getRange();
        if (
          ((e = t.startContainer),
          (e = 1 == e.nodeType ? e : e.parentNode) &&
            (e = domUtils.findParentByTagName(e, tag, !0)) &&
            !domUtils.isInNodeEndBoundary(t, e))
        )
          return e;
      },
    }),
      me.addListener("keydown", function (e, t) {
        var i = me.body.getAttribute("pattern"),
          n = me.selection.getRange();
        if (!i || "trace" == i) {
          n.collapsed ? me.queryCommandValue("trace") : me.selection.getStart();
          return !i ||
            "trace" != i ||
            ("8" != window.event.keyCode && "46" != window.event.keyCode)
            ? void 0
            : n.collapsed
            ? (alert("请选择需要添加留痕的内容！"),
              (window.event.keyCode = 0),
              (window.event.returnValue = !1),
              !1)
            : (me.execCommand("trace", { author: "admin" }),
              (window.event.keyCode = 0),
              (window.event.returnValue = !1),
              !1);
        }
      });
    var popup = new baidu.editor.ui.Popup({
      editor: this,
      content: "",
      className: "edui-bubble",
    });
    popup.render(),
      me.addListener("mouseover", function (t, evt) {
        evt = evt || window.event;
        var el = evt.target || evt.srcElement;
        domUtils.findParent(
          el,
          function (node) {
            if (
              eval("/" + tag + "/ig").test(node.tagName) &&
              "trace" == node.getAttribute("plugins")
            ) {
              var author = node.getAttribute("author"),
                pathname = parent.location.pathname,
                pagename = pathname.slice(pathname.lastIndexOf("/") + 1),
                html = popup.formatHtml(
                  '<div style="width:100px;">由' + author + "删除</div>"
                );
              html
                ? ((popup.getDom("content").innerHTML = html),
                  (popup.anchorEl = node),
                  popup.showAnchor(popup.anchorEl))
                : popup.hide();
            }
          },
          !0
        );
      });
  });
